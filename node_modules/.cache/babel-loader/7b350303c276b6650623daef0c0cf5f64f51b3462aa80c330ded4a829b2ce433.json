{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SCDas\\\\OneDrive\\\\Desktop\\\\React\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textforms from './components/Textforms';\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.background = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.background = 'white';\n      showAlert(\"light mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Textutils\",\n      mode: mode,\n      toggleMode: toggleMode,\n      about: \"about-Textutils\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Textforms, {\n        showAlert: showAlert,\n        heading: \"Enter The text to analyse \",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"QWu0QpbEF50KcvttgEfF5q8xP20=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","Textforms","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","background","children","title","about","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["C:/Users/SCDas/OneDrive/Desktop/React/textutils/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textforms from './components/Textforms';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const[mode,setMode]=useState('light');\n  const[alert,setAlert]=useState(null);\n  const showAlert=(message, type)=>{\n    setAlert({\n      msg: message,\n      type:type\n    })\n      \n    setTimeout(() =>{\nsetAlert(null)\n    },3000);\n  }\n   const toggleMode=()=>{\n    if (mode==='light'){\n      setMode('dark');\n      document.body.style.background='grey';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n    }else {\n      setMode('light');\n      document.body.style.background='white';\n      showAlert(\"light mode has been enabled\",\"success\");\n\n    }\n     }\n  return (\n<>\n\n<Navbar title=\"Textutils\"  mode={mode} toggleMode={toggleMode}about=\"about-Textutils\"/>\n<div className=\"container my-3\">\n  <Alert alert={alert}/>\n{ <Textforms  showAlert={showAlert} heading=\"Enter The text to analyse \" mode={mode}/> }\n{ }\n{/* <About/> */}\n</div>\n</>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,IAAI,EAACC,OAAO,CAAC,GAACX,QAAQ,CAAC,OAAO,CAAC;EACrC,MAAK,CAACY,KAAK,EAACC,QAAQ,CAAC,GAACb,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAMc,SAAS,GAACA,CAACC,OAAO,EAAEC,IAAI,KAAG;IAC/BH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAACA;IACP,CAAC,CAAC;IAEFE,UAAU,CAAC,MAAK;MACpBL,QAAQ,CAAC,IAAI,CAAC;IACV,CAAC,EAAC,IAAI,CAAC;EACT,CAAC;EACA,MAAMM,UAAU,GAACA,CAAA,KAAI;IACpB,IAAIT,IAAI,KAAG,OAAO,EAAC;MACjBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,UAAU,GAAC,MAAM;MACrCT,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;IACnD,CAAC,MAAK;MACJH,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,UAAU,GAAC,OAAO;MACtCT,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC;IAEpD;EACC,CAAC;EACJ,oBACFT,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBAEAnB,OAAA,CAACJ,MAAM;MAACwB,KAAK,EAAC,WAAW;MAAEf,IAAI,EAAEA,IAAK;MAACS,UAAU,EAAEA,UAAW;MAAAO,KAAK,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvFzB,OAAA;MAAK0B,SAAS,EAAC,gBAAgB;MAAAP,QAAA,gBAC7BnB,OAAA,CAACF,KAAK;QAACS,KAAK,EAAEA;MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACtBzB,OAAA,CAACH,SAAS;QAAEY,SAAS,EAAEA,SAAU;QAACkB,OAAO,EAAC,4BAA4B;QAACtB,IAAI,EAAEA;MAAK;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGjF,CAAC;EAAA,eACJ,CAAC;AAEH;AAACrB,EAAA,CArCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}