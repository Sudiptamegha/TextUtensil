{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SCDas\\\\OneDrive\\\\Desktop\\\\React\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport About from './components/About';\nimport Navbar from \"./components/Navbar\";\nimport Textforms from \"./components/Textforms\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Switch, Route, Link, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.background = \"grey\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.background = \"white\";\n      showAlert(\"light mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Textutils\",\n        mode: mode,\n        toggleMode: toggleMode,\n        about: \"about-Textutils\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(\"switch\", {\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Textforms, {\n                showAlert: showAlert,\n                heading: \"Enter The text to analyse \",\n                mode: mode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","About","Navbar","Textforms","Alert","BrowserRouter","Router","Switch","Route","Link","Routes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","background","children","title","about","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","heading","_c","$RefreshReg$"],"sources":["C:/Users/SCDas/OneDrive/Desktop/React/textutils/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n import About from './components/About';\nimport Navbar from \"./components/Navbar\";\nimport Textforms from \"./components/Textforms\";\nimport Alert from \"./components/Alert\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Routes\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.background = \"grey\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.background = \"white\";\n      showAlert(\"light mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n    <Router>\n      <Navbar\n        title=\"Textutils\"\n        mode={mode}\n        toggleMode={toggleMode}\n        about=\"about-Textutils\"\n      />\n       <Alert alert={alert} />\n        \n      <div className=\"container my-3\">\n\n      <switch>\n         <Routes> \n          <Route path=\"/\" element={ <About />}>\n           </Route>\n           <Route path=\"/\" > \n          <Textforms\n          showAlert={showAlert}\n          heading=\"Enter The text to analyse \"\n          mode={mode}\n        /> \n           </Route> \n          </Routes>\n       </switch>\n\n        {/* <About/> */}\n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}